(import "examples/dfa.unlisp")

(defineq dfa-1
    (dfa 0 '(1) (lambda (state symbol)
		  (case state
		    (0 (case symbol
			 (#0 0)
			 (#1 1)))
		    (1 (case symbol
			 (#0 0)
			 (#1 1)))))))

(defun show-usage ()
  (print-string-ln "Usage: prog <sequence>"))

(with-args (list "101")
  (defineq args (get-args))
  (if (/= (length args) 1)
      (show-usage)
      (seq
       (defineq sequence (head args))
       (if (dfa.test dfa-1 sequence)
	   (print-string-ln "SUCCESS")
	   (print-string-ln "PIZDETZ")))))

(let ((a (n) (if (<= n 1) "A" (b (pred n))))
      (b (n) (if (<= n 1) "B" (a (pred n)))))
  (print "~s~%" (b 5)))
