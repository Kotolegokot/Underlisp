(defmacro put-in-the-middle (x xs)
  `(~(head xs) ~x ~(head (tail xs))))

(setq write (lambda (str)
	      (if (not (empty? str))
		  (seq (put-char (head str))
		       (write (tail str))))))


(assert (= (put-in-the-middle 4 (- 3)) 1))

;; prints error if ex is false
;; (defmacro assert (cond)
;;   `(unless ~cond
;;      (write '~cond)
;;      (put-char #newline)
;;      (error "assert failed")))

(defmacro assert (condition)
  `(if (not ~condition)
       (seq
	(write (->string '~condition))
	(put-char #newline)
	(error "assert failed"))))
